ACC.contactus = {
    _autoload: [
        ["selectOptionRadioButton", $(".faq-radio-btn").length > 0],
        ["openFeedBackPopUp", $("#contactUsFormButton").length > 0],
        "validateContactUsForm",
        ["userNameFulfillBySelectedLoginMethod", $(".js_loginSharedInput").length],
        ["bindAutoSelectRadioButton", $(".faq-radio-btn").length > 0],
        ["selectOptionStore", $("#storeName").length > 0],
        ["bindAttachmentsActions", $("input[name^='attachment_']").length]
    ],

    selectOptionStore: function () {
        const $jsStoreNameAutocomplete = $(".js-store-name-autocomplete");
        let timeoutSearch;
        const $storeName = $("#storeName");

        $storeName.autocomplete({
            appendTo: ".js-store-name-autocomplete",
            source: function (request, response) {
                const $form = $("#shrHelpCenterContactUsForm");
                const $provinceInput = $form.find("select[id='province']");
                const $selectedOption = $provinceInput.find(":selected");

                $.ajax({
                    url: '/store-finder/contactus/stores/autocomplete',
                    data: {
                        store: request.term,
                        region: $selectedOption.data("iso")
                    },
                    type: "get",
                    success: function (data) {
                        const autoSearchData = [];
                        if (data.results != null && data.results.length) {
                            $.each(data.results, function (i, obj) {
                                autoSearchData.push({
                                    value: ACC.sanitizer.sanitize(obj.name),
                                    label: obj.displayName
                                });
                            });
                            $jsStoreNameAutocomplete.removeClass("is-empty").addClass("is-searching");
                            timeoutSearch = setTimeout(function () {
                                $jsStoreNameAutocomplete.removeClass("is-searching");
                                response(autoSearchData);
                            }, 1000);
                        } else {
                            $jsStoreNameAutocomplete.removeClass("is-searching").addClass("is-empty");
                        }
                    },
                    error: function () {
                        cleanStates();
                        $jsStoreNameAutocomplete.removeClass("is-searching").addClass("is-empty");
                        console.error("Failed to search stores");
                    }
                });
            },
            classes: {
                "ui-autocomplete": "search-site-autocomplete"
            },
            select: function (event, ui) {
                setSelectedValues(event, ui);
            },
            search: function () {
                clearTimeout(timeoutSearch);
                cleanStates();
                $("#storeId").val("");
                $("#contactUsFormButton").attr("disabled", true);
            },
            change: function (event, ui) {
                cleanStates();
                if (ui != null && ui.item != null) {
                    setSelectedValues(event, ui);
                } else {
                    // not valid province selected
                    $("#storeName").val("");
                    $("#storeId").val("");
                    return false;
                }
            },
            close: function () {
                cleanStates();
            }
        }).autocomplete("instance")._renderItem = function (ul, item) {
            const renderHtml = "<span>" + ACC.sanitizer.sanitize(item.label) + "</span>";
            return $("<li>")
                .append(renderHtml)
                .appendTo(ul);
        };

        function setSelectedValues(event, ui) {
            $("#storeName").val(ui.item.label);
            $("#storeId").val(ui.item.value);
            ACC.contactus.validForm($("#shrHelpCenterContactUsForm"));
            event.preventDefault();
        }

        function cleanStates() {
            $jsStoreNameAutocomplete.removeClass("is-searching is-empty");
        }

        $("#province").change(function () {
            $storeName.val('');
            $("#storeId").val('');
            $storeName.attr('disabled', false);
            $storeName.focus();
        });

        $storeName.blur(function () {
            if ($("#storeId").val() === '') {
                $("#contactUsFormButton").attr('disabled', true);
            }
        });
    },

    bindInputsSubmit: function () {
        let cardId;
        const firstNumbers = $("input.contact-us-card-first-numbers").val();
        const secondNumbers = $("input.contact-us-card-second-numbers").val();
        const thirdNumbers = $("input.contact-us-card-third-numbers").val();
        const fourthNumbers = $("input.contact-us-card-fourth-numbers").val();
        cardId = firstNumbers.concat(secondNumbers, thirdNumbers, fourthNumbers);

        $("input[name='xtraSavingsCardNumber']").val(cardId);
        $("input[name='browserType']").val(ACC.contactus.getBrowserType());
    },

    getBrowserType: function () {
        const browserAgent = ["Chrome", "Firefox", "Safari", "Opera", "MSIE", "Trident", "Edge"];
        let browser;
        const userAgent = navigator.userAgent;
        for (let i = 0; i < browserAgent.length; i++) {
            if (userAgent.indexOf(browserAgent[i]) > -1) {
                browser = browserAgent[i];
                break;
            }
        }
        if (browser === "MSIE" || browser === "Trident" || browser === "Edge") {
            browser = "Internet Explorer";
        }
        return browser;
    },

    selectOptionRadioButton: function () {
        const $selectedOptionBox = $(".js-selected-option-box");

        $("#customerCareRadioButton").click(function () {
            $selectedOptionBox.attr("data-selected-option", $(this).data("selected-option"));
        });

        $("#xtraSavinsRadioButton").click(function () {
            $selectedOptionBox.attr("data-selected-option", $(this).data("selected-option"));
        });

        $("#clickCollectRadioButton").click(function () {
            $selectedOptionBox.attr("data-selected-option", $(this).data("selected-option"));
        });

        $("#sixty60RadioButton").click(function () {
            $selectedOptionBox.attr("data-selected-option", $(this).data("selected-option"));
        });
    },

    validateContactUsForm: function () {
        $.validator.addMethod("lettersOnly", function (value, element) {
            return this.optional(element) || /^\D+$/i.test(value);
        }, "Letters Only.");

        $.validator.addMethod("numbersOnly", function (value, element) {
            return this.optional(element) || /^[0-9]+$/.test(value);
        }, "Numbers Only.");

        $.validator.addMethod("phoneValid", function (value, element) {
            return this.optional(element) || /^(?=\d{10})((0)[0-9]{9})$|^(?=[1-9]{9})([0-9]{9})$/.test(value);
        }, "Invalid number.");

        $.validator.addMethod("valueNotEquals", function (value, element, arg) {
            return arg !== value;
        }, "Value must not equal arg.");

        const shrHelpCenterContactUsForm = $("#shrHelpCenterContactUsForm");

        if (shrHelpCenterContactUsForm.length > 0 && (typeof shrHelpCenterContactUsForm.data("validate") === "undefined")) {
            shrHelpCenterContactUsForm.validate({
                ignore: '.not-active',
                errorElement: 'span',
                errorClass: 'input-error-span',
                rules: {
                    firstName: {
                        required: true,
                        lettersOnly: true,
                        minlength: 2
                    },
                    surname: {
                        required: true,
                        lettersOnly: true,
                        minlength: 2
                    },
                    contactNumber: {
                        required: true,
                        minlength: 9,
                        maxlength: 10,
                        phoneValid: true
                    },
                    topic: {
                        required: true
                    },
                    xtraSavingsCardNumber: {
                        required: false,
                        number: true,
                        numbersOnly: true
                    },
                    onlineOrderNumber: {
                        required: false,
                        number: true,
                        numbersOnly: true
                    },
                    msgType: {
                        required: true,
                        valueNotEquals: "default"
                    },
                    province: {
                        required: true,
                        valueNotEquals: "default"
                    },
                    storeName: {
                        required: true
                    },
                    subject: {
                        required: true
                    },
                    details: {
                        required: true
                    }
                },
                messages: {
                    msgType: {
                        valueNotEquals: "Please choose topic!"
                    },
                    province: {
                        valueNotEquals: "Please choose province!"
                    }
                },
                errorPlacement: function (error, element) {
                    const srSwitch = element.closest(".contact-us-form-error");
                    if (srSwitch.length > 0) {
                        srSwitch.append(error)
                    } else {
                        element.parent().append(error);
                    }
                },
                onkeyup: function (element) {
                    $(element).valid();
                    ACC.contactus.validForm(shrHelpCenterContactUsForm);
                },
                onclick: function (element) {
                    $(element).valid();
                    ACC.contactus.validForm(shrHelpCenterContactUsForm);
                }
            });
        }
    },

    validForm: function (form) {
        const inputs = form.find("input[required]:visible");
        const selects = form.find("select[required]:visible");
        const button = form.find("#contactUsFormButton");
        let errors = 0;

        $.each(inputs, function (index, element) {
            if (!$(element).hasClass("valid")) {
                errors++
            }
        });

        $.each(selects, function (index, element) {
            if (!$(element).hasClass("valid")) {
                errors++
            }
        });

        if (!$(".js-details-text-area").hasClass("valid")) {
            errors++;
        }

        if (errors > 0) {
            button.attr('disabled', true)
        } else if (errors === 0 && $('input[name=topic]:checked').val() != null && $("#storeId").val() !== '') {
            button.attr('disabled', false)
        }
    },

    openFeedBackPopUp: function () {
        $(document).on("click", "#contactUsFormButton", function (event) {
            event.preventDefault();

            $("#contactUsFormButton").attr('disabled', true);

            ACC.contactus.bindInputsSubmit();

            const formObject = ACC.contactus.createFormJson();
            const formData = new window.FormData();
            formData.append('properties', new Blob([JSON.stringify(formObject)], {
                type: "application/json"
            }));

            $("input[name^='attachment_']").each(function () {
                const file = $(this).prop("files")[0];
                if (file) {
                    formData.append("attachments", file);
                }
            });

            let intervalId;
            let progress = 0;
            const attachments = formData.getAll("attachments").length;
            $.ajax({
                url: "/help-centre/submit-form",
                data: formData,
                contentType: false,
                processData: false,
                type: 'POST',
                beforeSend: function () {
                    if (attachments) {
                        ACC.contactus.openProgressModal();
                        const url = $(".js-files-uploaded").data("url");
                        intervalId = setInterval(ACC.contactus.getProgress, 500, url, progress, intervalId, formData.getAll("attachments").length);
                    }
                },
                success: function (response) {
                    if (attachments) {
                        clearInterval(intervalId);
                        $(".js-attachments-progress-bar").val(100);
                        const $attachmentsProgressText = $('.js-attachments-progress-text');
                        if ($attachmentsProgressText.length) {
                            $attachmentsProgressText.text($attachmentsProgressText.data('tmpl').replace('{0}', attachments).replace('{1}', attachments));
                        }
                        setTimeout(function () {
                            $(".js-attachments-progress-popup-uploading").fadeOut('slow', function () {
                                $(".js-attachments-progress-popup-success").fadeIn('slow');
                                ACC.colorbox.resize()
                            });
                        }, 250);
                    } else {
                        ACC.contactus.successfulSubmit(response);
                    }
                },
                error: function (response) {
                    if (attachments) {
                        clearInterval(intervalId);
                    }
                    const $html = $(response.responseText);
                    if ($html.hasClass("js-contact-us-success-feedback")) {
                        $("input[name^='attachment_']").each(function () {
                            if ($(this).hasClass("valid")) {
                                $(this).remove()
                            }
                        });
                        $(".js-file-item").each(function () {
                            $(this).removeClass("has-file");
                        })
                        ACC.contactus.unssuccessfulSubmit(response);
                    } else if ($html.hasClass("js-contact-us-error-message")) {
                        ACC.contactus.contactUsErrorMessage(response);
                    } else {
                        ACC.colorbox.open("", {
                            href: ".js-contact-us-error-message",
                            className: "colorbox-contact-us-error-message",
                            inline: true,
                            scrolling: false,
                            width: "320",
                            closeButton: false,
                            overlayClose: false,
                            escKey: false,
                            onComplete: function () {
                                $('.contact-us-error-message .btn-cancel').on('click', function () {
                                    ACC.colorbox.close();
                                });
                            }
                        });
                    }
                }
            });
        });
    },

    createFormJson: function () {
        const form = {};
        form["browserType"] = $("input[name='browserType']").val();
        form["firstName"] = $("input[name='firstName']").val();
        form["surname"] = $("input[name='surname']").val();
        form["email"] = $("input[name='email']").val();
        form["contactNumber"] = $("input[name='contactNumber']").val();
        form["topic"] = $("input[name='topic']:checked").val();
        form["msgType"] = $("#msgType").find(":selected").text();
        form["province"] = $("#province").find(":selected").text();
        form["storeName"] = $("input[name='storeName']").val();
        form["storeId"] = $("input[name='storeId']").val();
        form["subject"] = $("input[name='subject']").val();
        form["details"] = $.trim($("#details").val());
        form["xtraSavingsCardNumber"] = $("input[name='xtraSavingsCardNumber']").val();
        form["onlineOrderNumber"] = $("input[name='onlineOrderNumber']").val();
        return form;
    },

    successfulSubmit: function (html) {
        ACC.colorbox.open("", {
            className: "show-answer-feedback",
            href: html,
            inline: true,
            width: "620",
            onComplete: function () {
                ACC.contactus.redirectToHomepage();
            },
            onClosed: function () {
                location.reload();
            }
        });
    },

    redirectToHomepage: function () {
        const $buttonRedirectFaqHomepage = $(".js-button-redirect-faq-homepage");
        if ($buttonRedirectFaqHomepage.length > 0) {
            $buttonRedirectFaqHomepage.click(function () {
                location.href = '/';
            });
        }
    },

    unssuccessfulSubmit: function (response) {
        ACC.colorbox.open("", {
            html: response.responseText,
            className: "show-answer-feedback",
            inline: false,
            scrolling: false,
            width: "620",
            onOpen: function () {
                ACC.colorbox.resize();
                ACC.contactus.openFeedBackPopUp();
            },
            onClosed: function () {
                location.reload();
            }
        });
    },

    contactUsErrorMessage: function (response) {
        ACC.colorbox.open("", {
            html: response.responseText,
            className: "colorbox-contact-us-error-message",
            inline: false,
            scrolling: false,
            width: "339",
            closeButton: false,
            onOpen: function () {
                ACC.colorbox.resize();
            },
            onComplete: function () {
                $('.contact-us-error-message .btn-cancel').on('click', function () {
                    ACC.colorbox.close();
                });
            },
            onClosed: function () {
                location.reload();
            }
        });
    },

    userNameFulfillBySelectedLoginMethod: function () {
        $(document).on("keyup blur", ".js_loginSharedInput", function () {
            let str = "";
            str = str + $(this).val();
            $("#j_username").val(str);
        });
    },

    bindAutoSelectRadioButton: function () {
        const $radioButtons = $(".faq-radio-btn");
        if ($radioButtons.length === 1) {
            const $selectedOptionBox = $(".js-selected-option-box");
            const $radioButton = $(".faq-label-radio").find("input[type='radio']");
            $radioButton.attr('checked', 'checked');

            $selectedOptionBox.attr("data-selected-option", $radioButton.data("selected-option"));
        }
    },

    bindAttachmentsActions: function () {
        $(document).on("change", "input[name^='attachment_']", function () {
            const $input = $(this);
            const file = $input.prop("files")[0];
            const $filesWrapper = $input.closest($(".js-files-uploaded"));
            const maxFilesAllowed = $filesWrapper.data("maxFilesAllowed");
            const allowedFormats = $filesWrapper.data("allowedFormats");
            const fileSize = $filesWrapper.data("fileSize");
            ACC.contactus.clearErrors();


            if (ACC.contactus.isFileValid(file, fileSize, allowedFormats)) {
                const $inputButton = $input.parent(".js-file-upload-button");
                const $fileItem = $inputButton.parent(".js-file-item");
                $fileItem.addClass('has-file');

                const $attachmentInputs = $("input[name^='attachment_']");
                const $fileInfosDisplay = $filesWrapper.find('.js-file-infos-display');
                if ($attachmentInputs.closest(".has-file").length < maxFilesAllowed) {
                    const lastIndex = $attachmentInputs.last().data("index");
                    const newIndex = lastIndex + 1;
                    const $newElement = ACC.contactus.createNewFileInput(newIndex, allowedFormats);
                    $fileInfosDisplay.removeClass("hidden");
                    $newElement.append($fileInfosDisplay);
                    $filesWrapper.append($newElement);
                    ACC.colorbox.resize();
                } else if ($attachmentInputs.length === maxFilesAllowed) {
                    $fileInfosDisplay.addClass("hidden");
                }

                $inputButton.addClass("hidden");
                $input.prop("disabled", true);
                $fileItem.find(".js-file-name span").text(file.name);
                $fileItem.find(".js-delete-file").removeClass("hidden");
            } else {
                $input.val("");
            }
        });

        $(document).on("click", ".js-file-click-button", function () {
            $('.js-files-uploaded').find('.js-file-upload-button:visible input[name^=attachment_]').click();
        });

        $(document).on("click", ".js-delete-file", function () {
            $(this).parent(".js-file-item").remove();
            ACC.contactus.clearErrors();

            const $filesWrapper = $(".js-files-uploaded");
            const allowedFormats = $filesWrapper.data("allowedFormats");
            const $attachmentInputs = $("input[name^='attachment_']");

            let validInputs = 0;
            $attachmentInputs.each(function () {
                if ($(this).val() !== "") {
                    validInputs = validInputs + 1;
                }
            });

            if ($attachmentInputs.length === validInputs) {
                const $lastInput = $attachmentInputs.last();
                const currentIndex = $lastInput.data("index");
                const newIndex = currentIndex + 1;
                const $fileInfosDisplay = $(".js-file-infos-display");

                const $newElement = ACC.contactus.createNewFileInput(newIndex, allowedFormats);
                $fileInfosDisplay.removeClass("hidden");
                $newElement.append($fileInfosDisplay);
                $filesWrapper.append($newElement);
            }
            if ($attachmentInputs.length === 1) {
                $filesWrapper.find('.file-upload-button .js-file-placeholder span').text(loc("text.contact.us.attachments"));
            }
        });
    },

    getProgress: function (url, progress, intervalId, totalItems) {
        $.ajax({
            url: url,
            type: "GET",
            cache: false,
            processData: false,
            contentType: false,
            success: function (data) {
                if (!data) {
                    clearInterval(intervalId);
                    return;
                }

                const dataArray = data.split("/");
                progress = Math.round((dataArray[0] / dataArray[1]) * 100);
                if ($.isNumeric(progress)) {
                    $(".js-attachments-progress-bar").val(progress);
                    const fileUploading = Math.ceil(dataArray[0] / dataArray[1] * totalItems);
                    if (fileUploading >= 1) {
                        const $attachmentsProgressText = $('.js-attachments-progress-text');
                        if ($attachmentsProgressText.length) {
                            $attachmentsProgressText.text($attachmentsProgressText.data('tmpl').replace('{0}', fileUploading).replace('{1}', totalItems));
                        }
                    }
                }
            }
        });
    },

    openProgressModal: function () {
        $(".js-attachments-progress-bar").val(0);
        $(".js-attachments-progress-popup-uploading").show();
        $(".js-attachments-progress-popup-success").hide();
        const $attachmentsProgressText = $('.js-attachments-progress-text');
        if ($attachmentsProgressText.length) {
            $attachmentsProgressText.text($attachmentsProgressText.data('tmpl').replace('{0}', '1').replace('{1}', $('.files-uploaded .has-file').length));
        }
        ACC.colorbox.open("", {
            href: ".js-attachments-progress-popup",
            inline: true,
            className: 'attachments-progress-popup-colorbox',
            scrolling: false,
            width: "620",
            closeButton: false,
            overlayClose: false,
            escKey: false
        });
    },

    createNewFileInput: function (newIndex, allowedFormats) {
        return $("<li class='js-file-item'>" +
            "<div class='file-upload-button js-file-upload-button'>" +
            "<span class='js-file-placeholder'><span>" + loc("text.contact.us.attachments.more") + "</span><i class='icon shoprite-icon-attach' aria-hidden'true'></i></span>" +
            "<input type='file' id='attachment_" + newIndex + "' name='attachment_" + newIndex + "' accept='" + allowedFormats + "' data-index='" + newIndex + "'/>" +
            "</div>" +
            "<span class='js-file-name'><span></span></span>" +
            "<span class='js-delete-file hidden'><i class='shoprite-icon-clear'></i></span>" +
            "</li>");
    },

    isFileValid: function (file, maxSize, allowedFormats) {
        if (file) {
            if (allowedFormats) {
                const allowedFormatsArray = allowedFormats.replaceAll(".", "").toLowerCase().split(","),
                    fileExtension = file.name.split('.').pop().toLowerCase();
                if (!allowedFormatsArray.includes(fileExtension)) {
                    ACC.contactus.displayError(loc("text.contact.us.file.type.invalid"));
                    return false;
                }
            }

            if ($.isNumeric(maxSize)) {
                if (file.size > parseFloat(maxSize)) {
                    ACC.contactus.displayError(loc("text.contact.us.file.size.invalid"));
                    return false;
                }
            }
        } else {
            ACC.contactus.displayError();
            return false;
        }
        return true;
    },

    displayError: function (message) {
        $('.js-file-infos-display').addClass('error');
        const $fileAlerts = $(".js-file-alerts");
        if (message) {
            const $fileUploadButtonWrapper = $('.js-file-upload-button:visible').closest('.js-file-item');
            $fileAlerts.insertBefore($fileUploadButtonWrapper);
            $fileAlerts.removeClass('hidden').find('.js-file-alerts-content span').text(message);
        } else {
            $fileAlerts.addClass('hidden');
        }
    },

    clearErrors: function () {
        $('.js-file-infos-display').removeClass('error');
        $(".js-file-alerts").addClass('hidden');
    }

};
