/*
 * [y] hybris Platform
 *
 * Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.
 *
 * This software is the confidential and proprietary information of SAP
 * ("Confidential Information"). You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the
 * license agreement you entered into with SAP.
 */

ACC.ymtkaddon = {
    _autoload: [
        ["bindUpdatePreferences", $(".js-item-preference").length],
        ["bindUpdateInterests", $(".js-item-preference").length],
        ["bindUpdateAirtime", $(".js-item-airtime").length],
        ["bindPostUpdate", $(".js-item-preference").length || $(".js-item-airtime").length],
        ["bindCancelUpdate", $(".js-item-preference").length],
        ["bindPostUpdateAirtime", $(".js-item-airtime").length],
        ["bindConsentUpdate", $("#marketingConsentForm").length],
        ["bindSwitchModal", $(".js-airtime-modal-switch").length],
        ["bindCloseAirtimeModal", $(".js-airtime-modal-close").length],
        ["bindSwipeForGoodComponentAction", $(".js-swipe-for-good").length]
    ],

    preferences: [],

    bindUpdatePreferences: function () {
        $(document).on("change", ".js-item-preference", function () {
            const $this = $(this);
            const preferenceObject = {
                code: $this.data("code"),
                active: $this.is(':checked'),
                name: $this.attr("data-name")
            };

            ACC.ymtkaddon.addPreference(preferenceObject);
            if (ACC.ymtkaddon.preferences && ACC.ymtkaddon.preferences.length > 0) {
                $('.js-update-preferences-btn').prop('disabled', false);
                $('.js-cancel-preferences-btn').prop('disabled', false);
            } else {
                $('.js-update-preferences-btn').prop('disabled', true);
                $('.js-cancel-preferences-btn').prop('disabled', true);
            }
        });
    },

    bindUpdateInterests: function () {
        $('.js-preference').click(function () {
            const interest = $(this);
            const selected = interest.hasClass('form-section__selected');
            const code = interest.data("code");

            if (selected) {
                interest.removeClass('form-section__selected');
            } else {
                interest.addClass('form-section__selected');
            }

            const preferenceObject = {
                code: code,
                active: interest.hasClass('form-section__selected'),
                name: interest.data("name")
            };

            ACC.ymtkaddon.addPreference(preferenceObject);
            if (ACC.ymtkaddon.preferences && ACC.ymtkaddon.preferences.length > 0) {
                $('.js-update-preferences-btn').prop('disabled', false);
                $('.js-cancel-preferences-btn').prop('disabled', false);
            } else {
                $('.js-update-preferences-btn').prop('disabled', true);
                $('.js-cancel-preferences-btn').prop('disabled', true);
            }
        })
    },

    bindUpdateAirtime: function () {
        $(document).on("change", ".js-item-airtime", function () {
            const $this = $(this);
            const $submitButton = $('.js-update-airtime-btn');
            const $mobileArea = $(".js-airtime-phone");
            const preferenceObject = {
                code: $this.data("code"),
                active: $this.is(':checked'),
                name: $this.attr("data-name")
            };

            ACC.ymtkaddon.addPreference(preferenceObject);
            if (ACC.ymtkaddon.preferences && ACC.ymtkaddon.preferences.length > 0) {
                if ($submitButton.hasClass("hidden")) {
                    $submitButton.removeClass("hidden")
                }

                $mobileArea.removeClass("hidden");
                $submitButton.prop('disabled', false);
            } else {
                $submitButton.prop('disabled', true);
            }
        });
    },

    bindCloseAirtimeModal: function () {
        $(document).on("click", ".js-airtime-modal-close", function () {
            var $this = $(this);
            if($this.data('action') === 'cancel') {
                $(".js-item-airtime").click();
            }
            $this.closest('.airtime-modal').removeClass('is-show');
        });
    },

    bindSwitchModal: function () {
        $(document).on("click", ".js-airtime-modal-switch", function () {
            ACC.account.airtimeModals("switch");
        });
    },

    bindPostUpdate: function () {
        $(document).on("click", ".js-update-preferences-btn", function (e) {
            e.preventDefault();
            $(".loading-background").show();
            $('body').css("overflow", "hidden");
            $.ajax({
                url: $(".js-update-preferences-btn").data("url"),
                type: "post",
                dataType: 'html',
                contentType: 'application/json',
                mimeType: 'application/json',
                data: JSON.stringify({
                    'preferences': ACC.ymtkaddon.preferences
                }),
                success: function (response) {
                    setTimeout(function () {
                        if ($(response).hasClass("js-preferences-redirect")) {
                            window.location.href = $(response).data("redirectUrl");
                        }
                    }, 3000);
                }
            });
        });
    },

    bindPostUpdateAirtime: function () {
        $(document).on("click", ".js-post-airtime-btn", function (e) {
            e.preventDefault();

            const $airtimeForm = $("#airtimeForm");
            if ($airtimeForm.length) {
                $airtimeForm.submit();
            }
        });
    },

    bindCancelUpdate: function () {
        $(document).on("click", '.js-cancel-preferences-btn', function (e) {
            location.reload();
        });
    },

    bindConsentUpdate: function () {
        $(document).on("change", "#marketingConsent", function () {
            const $form = $("#marketingConsentForm");
            $form.submit();
        });
    },

    bindSwipeForGoodComponentAction: function () {
        $(document).on("change", ".js-swipe-for-good", function () {
            const $this = $(this);
            const preferenceObject = {
                code: $this.data("code"),
                active: $this.is(':checked'),
                name: $this.attr("data-name")
            };

            $.ajax({
                url: $this.data("url"),
                type: "post",
                dataType: 'html',
                contentType: 'application/json',
                mimeType: 'application/json',
                data: JSON.stringify({'preferences': [preferenceObject]})
            });
        });
    },

    addPreference: function (preference) {
        const found = ACC.ymtkaddon.findElement(ACC.ymtkaddon.preferences,
            preference);

        if (!found) {
            ACC.ymtkaddon.preferences.push(preference);
        } else {
            const index = ACC.ymtkaddon.preferences.indexOf(found);
            ACC.ymtkaddon.preferences.splice(index, 1);
        }
    },

    findElement: function (list, elementToFind) {
        return list.find(function (element) {
            return element.code === elementToFind.code;
        });
    }

};
