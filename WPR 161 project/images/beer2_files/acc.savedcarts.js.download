ACC.savedcarts = {

    _autoload: [
        ["bindRestoreSavedCartClick", $(".js-restore-saved-cart").length != 0],
        ["bindDeleteSavedCartLink", $('.js-delete-saved-cart').length != 0],
        ["bindDeleteConfirmLink", $('.js-savedcart_delete_confirm').length != 0],
        ["bindSaveCartForm", $(".js-save-cart-link").length != 0 || $(".js-update-saved-cart").length != 0],
        ["bindUpdateUploadingSavedCarts", $(".js-uploading-saved-carts-update").length != 0]
    ],

    $savedCartRestoreBtn: {},
    $currentCartName: {},

    bindRestoreSavedCartClick: function () {
        $(".js-restore-saved-cart").click(function (event) {

            event.preventDefault();
            const popupTitle = $(this).data('restore-popup-title');
            const cartId = $(this).data('savedcart-id');
            const url = ACC.config.encodedContextPath + '/my-account/saved-carts/' + encodeURIComponent(cartId) + '/restore';
            const popupTitleHtml = ACC.common.encodeHtml(popupTitle);

            ACC.common.checkAuthenticationStatusBeforeAction(function () {
                $.get(url, undefined, undefined, 'html').done(function (data) {
                    ACC.colorbox.open(popupTitleHtml, {
                        html: data,
                        width: 500,
                        onComplete: function () {
                            ACC.common.refreshScreenReaderBuffer();
                            ACC.savedcarts.bindRestoreModalHandlers();
                            ACC.savedcarts.bindPostRestoreSavedCartLink();
                        },
                        onClosed: function () {
                            ACC.common.refreshScreenReaderBuffer();
                        }
                    });
                });
            });
        });
    },

    bindRestoreModalHandlers: function () {

        ACC.savedcarts.$savedCartRestoreBtn = $('.js-save-cart-restore-btn');
        ACC.savedcarts.$currentCartName = $('.js-current-cart-name');

        $(".js-prevent-save-active-cart").on('change', function () {
            if ($(this).prop('checked') === true) {
                ACC.savedcarts.$currentCartName.attr('disabled', 'disabled');
                ACC.savedcarts.$savedCartRestoreBtn.removeAttr('disabled');
            } else {
                ACC.savedcarts.$currentCartName.removeAttr('disabled');
                const inputVal = ACC.savedcarts.$currentCartName.val();
                if (inputVal === "" && inputVal.length === 0) {
                    ACC.savedcarts.$savedCartRestoreBtn.attr('disabled', 'disabled');
                }
            }
        });

        ACC.savedcarts.$currentCartName.on('focus', function () {
            $('.js-restore-current-cart-form').removeClass('has-error');
            $('.js-restore-error-container').html('');
        });

        ACC.savedcarts.$currentCartName.on('blur', function () {
            if (this.value === "" && this.value.length === 0) {
                ACC.savedcarts.$savedCartRestoreBtn.attr('disabled', 'disabled');
            } else {
                ACC.savedcarts.$savedCartRestoreBtn.removeAttr('disabled');
            }
        });
    },

    bindPostRestoreSavedCartLink: function () {
        let keepRestoredCart = true;
        let preventSaveActiveCart = false;

        $(document).on("click", '.js-keep-restored-cart', function () {
            keepRestoredCart = $(this).prop('checked');
        });

        $(document).on("click", '.js-prevent-save-active-cart', function () {
            preventSaveActiveCart = $(this).prop('checked');
        });

        $(document).on("click", '.js-save-cart-restore-btn', function (event) {
            event.preventDefault();
            const cartName = $('#activeCartName').val();
            const url = $(this).data('restore-url');
            const postData = {
                preventSaveActiveCart: preventSaveActiveCart,
                keepRestoredCart: keepRestoredCart,
                cartName: cartName
            };

            ACC.common.checkAuthenticationStatusBeforeAction(function () {
                $.post(url, postData, undefined, 'html').done(function (result, data, status) {
                    result = ACC.sanitizer.sanitize(result);
                    if (result === "200") {
                        window.location.replace(ACC.config.encodedContextPath + "/cart");
                    } else {
                        const errorMsg = status.responseText.slice(1, -1);
                        $('.js-restore-current-cart-form').addClass('has-error');
                        $('.js-restore-error-container').html(errorMsg);
                        $('.js-savedcart_restore_confirm_modal').colorbox.resize();
                    }
                });
            });
        });

        $(document).on("click", '.js-cancel-restore-btn', function () {
            ACC.colorbox.close();
        });
    },

    bindDeleteSavedCartLink: function () {
        $(document).on("click", '.js-delete-saved-cart', function (event) {
            event.preventDefault();
            const cartId = $(this).data('savedcart-id');
            const popupTitle = $(this).data('delete-popup-title');
            const popupTitleHtml = ACC.common.encodeHtml(popupTitle);

            ACC.colorbox.open(popupTitleHtml, {
                inline: true,
                className: "js-savedcart_delete_confirm_modal",
                href: "#popup_confirm_savedcart_delete_" + cartId,
                width: '500px',
                onComplete: function () {
                    $(this).colorbox.resize();
                }
            });
        });
    },

    bindDeleteConfirmLink: function () {
        $(document).on("click", '.js-savedcart_delete_confirm', function (event) {
            event.preventDefault();
            const cartId = $(this).data('savedcart-id');
            const url = ACC.config.encodedContextPath + '/my-account/saved-carts/' + encodeURIComponent(cartId) + '/delete';
            ACC.common.checkAuthenticationStatusBeforeAction(function () {
                $.ajax({
                    url: url,
                    type: 'DELETE',
                    success: function () {
                        ACC.colorbox.close();
                        window.location.replace(ACC.config.encodedContextPath + "/my-account/saved-carts");
                    }
                });
            });
        });

        $(document).on("click", '.js-savedcart_delete_confirm_cancel', function () {
            ACC.colorbox.close();
        });
    },

    bindSaveCartForm: function () {
        ACC.savedcarts.charactersLeftInit();
        const form = $('#saveCartForm');
        let saveCart = false;
        const showSaveCartFormCallback = function () {
            const title = $('#saveCart').data("saveCartTitle");
            const titleHtml = ACC.common.encodeHtml(title);
            ACC.colorbox.open(titleHtml, {
                href: "#saveCart",
                inline: true,
                width: "620px",
                onOpen: function () {
                    if ($('#saveCartName').val()) {
                        ACC.savedcarts.disableSaveCartButton(false);
                    }
                },
                onComplete: function () {
                    $(this).colorbox.resize();
                    saveCart = false;
                },
                onClosed: function () {
                    if (saveCart) {
                        form.submit();
                    }
                    document.getElementById("saveCartForm").reset();
                    ACC.savedcarts.disableSaveCartButton(true);
                    ACC.savedcarts.charactersLeftInit();
                }
            });
        };

        $(document).on("click", ".js-save-cart-link, .js-update-saved-cart", function (e) {
            e.preventDefault();
            ACC.common.checkAuthenticationStatusBeforeAction(showSaveCartFormCallback);
        });

        $(document).on("click", '#saveCart #cancelSaveCartButton', function (e) {
            e.preventDefault();
            $.colorbox.close();
        });

        $('#saveCartName').keyup(function () {
            // enable the save cart button
            $('#saveCart #saveCartButton').prop('disabled', this.value.trim() === "");
            // limit the text length
            const maxchars = 255;
            const value = $('#localized_val').attr('value');
            const tlength = $(this).val().length;
            const remain = maxchars - parseInt(tlength);
            $('#remain').text(value + ' : ' + remain);
        });

        $('#saveCartDescription').keyup(function () {
            const maxchars = 255;
            const value = $('#localized_val').attr('value');
            const tlength = $(this).val().length;
            const remain = maxchars - parseInt(tlength);
            $('#remainTextArea').text(value + ' : ' + remain);
        });

        $(document).on("click", '#saveCart #saveCartButton', function (e) {
            e.preventDefault();
            saveCart = true;
            $.colorbox.close();
        });
    },

    charactersLeftInit: function () {
        const $localizedVal = $('#localized_val');
        $('#remain').text($localizedVal.attr('value') + ' : 255');
        $('#remainTextArea').text($localizedVal.attr('value') + ' : 255');
    },

    disableSaveCartButton: function (value) {
        $('#saveCart #saveCartButton').prop('disabled', value);
    },


    bindUpdateUploadingSavedCarts: function () {
        const $uploadingSavedCardsUpdate = $(".js-uploading-saved-carts-update");
        const cartIdRowMapping = $uploadingSavedCardsUpdate.data("idRowMapping");
        const refresh = $uploadingSavedCardsUpdate.data("refreshCart");
        if (cartIdRowMapping && refresh) {
            const interval = $uploadingSavedCardsUpdate.data("refreshInterval");
            const arrCartIdAndRow = cartIdRowMapping.split(',');
            const mapCartRow = {};
            const cartCodes = [];
            for (let i = 0; i < arrCartIdAndRow.length; i++) {
                const arrValue = arrCartIdAndRow[i].split(":");
                if (arrValue !== "") {
                    mapCartRow[arrValue[0]] = arrValue[1];
                    cartCodes.push(arrValue[0]);
                }
            }

            if (cartCodes.length > 0) {
                setTimeout(function () {
                    ACC.savedcarts.refreshWorker(cartCodes, mapCartRow, interval)
                }, interval);
            }
        }
    },


    refreshWorker: function (cartCodes, mapCartRow, interval) {
        $.ajax({
            dataType: "json",
            url: ACC.config.encodedContextPath + '/my-account/saved-carts/uploadingCarts',
            data: {
                cartCodes: cartCodes
            },
            type: "GET",
            traditional: true,
            success: function (data) {
                if (data !== undefined) {
                    const hidden = "hidden";
                    const rowId = "#row-";
                    for (let i = 0; i < data.length; i++) {
                        const cart = data[i];

                        const index = $.inArray(cart.code, cartCodes);
                        if (index > -1) {
                            cartCodes.splice(index, 1)
                        }
                        const rowIdIndex = mapCartRow[cart.code];
                        if (rowIdIndex !== undefined) {
                            const rowSelector = rowId + rowIdIndex;
                            $(document).find(rowSelector + " .js-saved-cart-name").removeClass("not-active");
                            $(document).find(rowSelector + " .js-saved-cart-date").removeClass("hidden");
                            $(document).find(rowSelector + " .js-file-importing").remove();
                            $(document).find(rowSelector + " .js-saved-cart-description").text(cart.description);
                            const numberOfItems = cart.entries.length;
                            $(document).find(rowSelector + " .js-saved-cart-number-of-items").text(numberOfItems);
                            $(document).find(rowSelector + " .js-saved-cart-total").text(cart.totalPrice.formattedValue);
                            if (numberOfItems > 0) {
                                $(document).find(rowSelector + " .js-restore-saved-cart").removeClass(hidden);
                            }
                            $(document).find(rowSelector + " .js-delete-saved-cart").removeClass(hidden);
                        }
                    }
                }

                if (cartCodes.length > 0) {
                    setTimeout(function () {
                        ACC.savedcarts.refreshWorker(cartCodes, mapCartRow, interval)
                    }, interval);
                }
            }
        })
    }
};