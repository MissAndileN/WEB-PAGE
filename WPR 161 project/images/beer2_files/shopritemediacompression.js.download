/*
 * [y] hybris Platform
 *
 * Copyright (c) 2017 SAP SE or an SAP affiliate company.  All rights reserved.
 *
 * This software is the confidential and proprietary information of SAP
 * ("Confidential Information"). You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the
 * license agreement you entered into with SAP.
 */
ACC.mediacompression = {

    _autoload: [
        ['checkWebpSupport', !$.cookie('webp_supported')]
    ],

    checkWebpSupport: function () {
        const callback = function (feature, result) {
            let webpCookie = $.cookie('webp_supported');

            if (webpCookie === null || webpCookie === 'true') {
                document.cookie = 'webp_supported=' + result + '; path=/; max-age=31536000';
            }
        }

        // Checking if a browser supports all the features
        ACC.mediacompression.checkWebpFeature('lossy', callback);
        ACC.mediacompression.checkWebpFeature('lossless', callback);
        ACC.mediacompression.checkWebpFeature('alpha', callback);
        ACC.mediacompression.checkWebpFeature('animation', callback);
    },

    // 'feature' can be one of 'lossy', 'lossless', 'alpha' or 'animation'.
    // 'callback(feature, result)' will be passed back the detection result (in an asynchronous way!)
    checkWebpFeature: function (feature, callback) {
        const testImages = {
            lossy: 'UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA',
            lossless: 'UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==',
            alpha: 'UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==',
            animation: 'UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA'
        };

        const img = new Image();

        img.onload = function () {
            const result = (img.width > 0) && (img.height > 0);
            callback(feature, result);
        };
        img.onerror = function () {
            callback(feature, false);
        };
        img.src = 'data:image/webp;base64,' + testImages[feature];
    }
}