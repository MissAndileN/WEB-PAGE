ACC.mastHead = {

    loadAjaxCarousel: function () {
        const carouselWrappers = $('.js-ajax-owl-masthead');
        carouselWrappers.each(function () {
            if (!$(this).data("initialized") === true) {
                ACC.mastHead.retrieveAjaxCarouselContent($(this));
                $(this).data("initialized", true);
            }
        });
    },

    retrieveAjaxCarouselContent: function (carouselWrapper) {
        const componentId = carouselWrapper.data("componentId");
        const baseUrl = carouselWrapper.data("baseUrl");

        $.ajax({
            type: "GET",
            url: baseUrl,
            data: ({componentId: componentId}),
            success: ACC.mastHead.populateAjaxCarousel(carouselWrapper),
            error: function () {
                console.error("An error occurred when loading carousel component " + componentId);
            }
        });
    },

    populateAjaxCarousel: function (carouselWrapper) {
        return function (data) {
            carouselWrapper.append(data);
            carouselWrapper.addClass("js-owl-carousel");
            carouselWrapper.addClass("js-owl-masthead");

            carouselWrapper.owlCarousel(ACC.carousel.mastheadConfiguration($(carouselWrapper).data("autoScroll"), $(carouselWrapper).data("scrollDelay")));
            if (!ACC.common.isSmartEditEnabled()) {
                ACC.rainmaker.bindDisplayInteraction();
            }
        }
    },

};

$(function () {
    if ($('.js-ajax-owl-masthead').length) {
        if (ACC.common.isSmartEditEnabled() && ACC.common.isReprocessPageEnabled()) {
            window.smartedit.addOnReprocessPageListener(ACC.mastHead.loadAjaxCarousel);
            window.smartedit.reprocessPage();
        } else {
            ACC.mastHead.loadAjaxCarousel();
        }
    }
});