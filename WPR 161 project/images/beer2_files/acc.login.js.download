ACC.login = {

    _autoload: [
        ["bindLoginValidation", $("#loginForm").length > 0],
        ["doInitialValidation", $("#loginForm").length > 0],
        ["countDownUnlockLogin", $("#countDownUnlock").length],
        ["bindBackArrowClick", $(".js-login-back-arrow").length],
        ["bindLoginOtpSubmit", $("#loginForm").length > 0],
        ["bindResendOtpAction", $("#loginForm").length > 0],
        ["bindResendEmailAction", $("#loginForm").length > 0],
        ["bindAcceptConsentValidation", $(".js-login-consent").length],
        ["bindRedirectToForgottenPassword", $("#redirectToForgottenPasswordForm").length],
        ["loginValidationBanner", $("#loginFormBanner").length]
    ],

    loginValidationBanner: function () {
        $.validator.addMethod("emailOrMobile", function (value, element) {
            return this.optional(element) || ($.isNumeric(value) ? ACC.validations.validateMobileNumber(value) : ACC.validations.validateEmail(value));
        }, loc("input.enter.email.or.phone"));

        const loginFormBanner = $("#loginFormBanner");

        if (loginFormBanner.length > 0) {
            loginFormBanner.validate({
                ignore: '.not-active',
                errorElement: 'span',
                errorClass: 'sr-error',
                rules: {
                    j_username: {
                        required: true,
                        emailOrMobile: true
                    }
                },
                errorPlacement: function (error, element) {
                    element.closest("form").append(error);
                },
                onkeyup: function () {
                    ACC.validations.validateForm(loginFormBanner);
                },
                onfocusout: function (element) {
                    this.element(element);
                },
                submitHandler: function (form) {
                    if (ACC.global.runRecaptcha($(form))) {
                        $(form).append('<input type="hidden" name="CSRFToken" value="' + ACC.config.CSRFToken + '" />');
                        form.submit();
                    }
                }
            });
        }
    },

    bindLoginValidation: function () {
        $.validator.addMethod("emailOrMobile", function (value, element) {
            return this.optional(element) || ($.isNumeric(value) ? ACC.validations.validateMobileNumber(value) : ACC.validations.validateEmail(value));
        }, loc("input.enter.email.or.phone"));

        const loginForm = $("#loginForm");
        const jUsername = loginForm.find("#j_username");
        const jPassword = loginForm.find("#j_password");
        if (jUsername.length > 0 && jUsername.is(":visible")) {
          jUsername.focus();
        } else if(jPassword.length > 0 && jPassword.is(":visible")) {
          jPassword.focus();
        }

        const loginUsingHeaderComponent = loginForm.data("isAjaxLogin") === true;

        if (loginForm.length > 0) {
            loginForm.validate({
                ignore: '.not-active',
                errorElement: 'span',
                errorClass: 'sr-error',
                rules: {
                    j_username: {
                        required: true,
                        emailOrMobile: true
                    },
                    j_password: {
                        minlength: 8,
                        maxlength: 128
                    },
                },
                messages: {
                    j_password: {
                        minlength: loc("login.password.min.length")
                    }
                },
                errorPlacement: function (error, element) {
                    element.parent().append(error);
                },
                onkeyup: function () {
                    ACC.validations.validateForm(loginForm);
                },
                onfocusout: function (element) {
                    this.element(element);
                },
                submitHandler: function (form) {
                    if (ACC.global.runRecaptcha($(form))) {
                        if (loginUsingHeaderComponent) {
                            const url = $(form).attr('action');
                            ACC.login.loadLoginPageViaAjax(url, 'POST', $(form).serialize(), function (data) {
                                ACC.login.replaceHeaderLoginResponse(data);
                            });
                        } else {
                            // Submit from login page
                            const jUsername = $(form).find("#j_username");
                            if (jUsername.length > 0 && jUsername.attr('type') !== 'hidden' && !$(form).data('consentForm') === true) {
                                const url = $(form).attr('action');
                                ACC.login.loadLoginPageViaAjax(url, 'POST', $(form).serialize(), function (data) {
                                    ACC.login.replaceLoginResponse(data);
                                });
                            } else {
                                const jPassword = $(form).find("#j_password");
                                if (jPassword.length > 0 && jPassword.attr('type') !== 'hidden') {
                                    const value = jUsername.val();
                                    const isMobile = $.isNumeric(value);
                                    ACC.login.registerGAEvents(isMobile);
                                }
                                form.submit();
                            }
                        }
                    }
                }
            });
        }
    },

    loadLoginPageViaAjax: function (url, method, data, onSuccess) {
        ACC.global.showLoadingBackgroundMenu();
        $.ajax({
            type: method,
            url: url,
            data: data,
            success: function (data) {
                onSuccess(data);
            }
        });
    },

    replaceLoginResponse: function (data) {
        $(".loading-background").hide();
        const $profileMenu = $(".profile__menu");
        $profileMenuStartHere = $(".profile__menu__start-here");
        $profileMenu.removeClass("profile__menu--signup");
        $profileMenuStartHere.removeClass("profile__menu__start-here--signup").addClass("profile__menu__start-here--signin");
        if ($(data).hasClass("js-ajax-redirect")) {
            window.location.href = $(data).data("redirectUrl");
        } else {
            if ($(data).hasClass("js-login-form-section")) {
                // Standalone Login Page
                $(".js-login-form-section").replaceWith(data);
                ACC.login.loadCommonBindings();
            } else if ($(data).hasClass("js-header-login-form-section")) {
                // Header Sign in Flow
                $(".js-header-login-form-section").replaceWith(data);
                ACC.login.bindAjaxLoginResendOtpAction();
                ACC.login.bindChangeUsername();
                ACC.login.loadCommonBindings();
            } else if ($(data).find(".js-header-registration").length > 0) {
                // Header Sign Up Flow
                $profileMenu.addClass("profile__menu--signup");
                $profileMenuStartHere.removeClass("profile__menu__start-here--signin").addClass("profile__menu__start-here--signup");

                $(".js-header-login-form-section").html(data);
                ACC.global.loadActionsForm();
                ACC.global.loadInputEffect();
                ACC.register.validateRegister();
                ACC.register.acceptTermsRegister();
                ACC.register.postValidateDetailsStep();
                ACC.register.postValidateCommunicationStep();
                ACC.register.postValidateStoreInterestsStep();
                ACC.register.getPreviousRegistrationStep();
                ACC.register.saidPassportNumber();
                ACC.register.xtraSaveNumberOnlyDigitsInputs();
                ACC.register.handleInterestClicks();
                ACC.register.bindRegisterOtpSubmit();
                ACC.register.bindResendOtpAction();
                ACC.dataPicker.datePicker();
            }
        }
    },

    doInitialValidation: function () {
        const loginForm = $("#loginForm");
        const jUsername = loginForm.find("#j_username");
        if (jUsername.is(":visible") && jUsername.val()) {
            ACC.validations.validateForm(loginForm);
        }
    },

    countDownUnlockLogin: function () {
        const $countDownUnlock = $("#countDownUnlock");
        if ($countDownUnlock.length) {
            const dataTime = $countDownUnlock.data("time");
            const dataCurrentTime = $countDownUnlock.data("serverTime");

            if (dataTime !== "" && dataTime !== null && dataCurrentTime !== "" && dataCurrentTime !== null) {
                const timeUnlock = new Date(dataTime).getTime();
                const timeToday = new Date(dataCurrentTime).getTime();
                const duration = timeUnlock - timeToday;
                const hours = Math.floor((duration / (1000 * 60 * 60)) % 24);
                let minutes = (hours * 60) + Math.floor((duration / (1000 * 60)) % 60);
                let seconds = Math.floor((duration / 1000) % 60);

                const $minutes = $countDownUnlock.find(".minutes");

                $minutes.html(setTimer(minutes, seconds));

                const intervalTimer = setInterval(function () {
                    if (seconds > 0) {
                        seconds--;
                    } else {
                        if (minutes > 0) {
                            minutes--;
                            seconds = 59;
                        } else {
                            clearInterval(intervalTimer);
                            location.reload();
                        }
                    }
                    $minutes.html(setTimer(minutes, seconds));
                }, 1000);

                function setTimer(m, s) {
                    const sec = s < 10 ? "0" + s : s;
                    const minutesText = m === 0 && s === 1 ? "minute" : "minutes";
                    return m + ":" + sec + " " + minutesText;
                }
            }
        }
    },

    bindBackArrowClick: function () {
        $(document).on("click", ".js-login-back-arrow", function (e) {
            e.preventDefault();
            const backUrlAjax = $(".js-login-form-section").data("backUrlAjax");
            if (backUrlAjax) {
                const loginFrom = $("#loginForm");
                ACC.login.loadLoginPageViaAjax(backUrlAjax, 'POST', $(loginFrom).serialize(), function (data) {
                    ACC.login.replaceLoginResponse(data);
                });
            } else {
                window.location.href = $(this).attr("href");
            }
        });
    },

    bindLoginOtpSubmit: function () {
        $(document).on("click", ".js-login-otp .js-otp-submit", function (e) {
            e.preventDefault();
            const loginFrom = $("#loginForm");
            const passwordInput = $("#j_password");
            const rememberMeInput = $("#rememberMe");
            const otpInput = $("#oneTimePin");
            const checkboxInput = $("#loginRememberMe");

            passwordInput.val(otpInput.val());
            rememberMeInput.val(checkboxInput.length > 0 && checkboxInput.is(":checked"));

            const loginUsingHeaderComponent = loginFrom.data("isAjaxLogin");
            if (loginUsingHeaderComponent) {
                const url = $(loginFrom).attr('action');
                ACC.login.loadLoginPageViaAjax(url, 'POST', $(loginFrom).serialize(), function (data) {
                    ACC.login.replaceHeaderLoginResponse(data);
                });
            } else {
                loginFrom.submit();
            }
        });
    },

    bindResendOtpAction: function () {
        $(document).on("click", ".js-resend-otp", function (e) {
            e.preventDefault();
            const loginFrom = $("#loginForm");
            ACC.login.loadLoginPageViaAjax($(".js-resend-otp").attr("href"), 'POST', $(loginFrom).serialize(),
                function (data) {
                    ACC.login.replaceLoginResponse(data);
                });
        });
    },

    bindResendEmailAction: function () {
        $(document).on("click", ".js-resend-email", function (e) {
            e.preventDefault();
            const loginFrom = $("#loginForm");
            ACC.login.loadLoginPageViaAjax($(this).attr("href"), 'POST', $(loginFrom).serialize(),
                function (data) {
                    ACC.login.replaceLoginResponse(data);
                });
        });
    },

    bindAcceptConsentValidation: function () {
        const $form = $(".js-login-consent").find("#loginForm");
        const $consentCheck = $form.find("#termsAndConditionsLink");

        $consentCheck.on("change", function () {
            const $submitButton = $form.find("#formButton");
            if ($(this).is(":checked")) {
                $submitButton.prop("disabled", false);
            } else {
                $submitButton.prop("disabled", true);
            }
        });
    },

    bindRedirectToForgottenPassword: function () {
        $(document).on("click", ".js-redirect-to-forgotten-password", function (e) {
            e.preventDefault();
            const $profileMenu = $(".profile__menu");
            $profileMenu.addClass("profile__menu--forgot-password");
            const $form = $("#redirectToForgottenPasswordForm");
            const loginUsingHeaderComponent = $form.data("isAjaxLogin");
            if (loginUsingHeaderComponent) {
                const url = $form.attr('action');
                ACC.login.loadLoginPageViaAjax(url, 'POST', $form.serialize(), function (data) {
                    ACC.login.replaceHeaderForgottenPasswordResponse(data);
                });
            } else {
                $form.submit();
            }
        });
    },

    replaceHeaderLoginResponse: function (data) {
        if (!$.isEmptyObject(data)) {
            if (data.success) {
                $('.loading-background').hide();
                if (data.redirectUrl) {
                    window.location.href = data.redirectUrl;
                } else {
                    const $jUsername = $('#loginForm').find('#j_username');
                    const isMobile = $.isNumeric($jUsername.val());

                    ACC.login.registerGAEvents(isMobile);
                    window.location.reload();
                }
            } else {
                if (data.redirectUrl) {
                    window.location.href = data.redirectUrl;
                } else {
                    const errorResponse = ACC.login.handleAjaxLoginError(data);
                    if (errorResponse) {
                        const $errorResponseHtml = $(errorResponse);
                        if ($errorResponseHtml.hasClass("js-header-login-form-section")) {
                            $('.loading-background').hide();
                            $(".js-header-login-form-section").replaceWith($errorResponseHtml);

                            ACC.login.loadCommonBindings();
                            ACC.login.countDownUnlockLogin();
                            ACC.login.bindAjaxLoginResendOtpAction();
                            ACC.login.bindChangeUsername();
                        }
                    }
                }
            }
        }
    },

    handleAjaxLoginError: function (data) {
        const postData = {
            errorMessage: data.errorMessage,
            email: data.email,
            mobileNumber: data.mobileNumber,
            rememberMe: data.rememberMe
        }

        if (data.unlockDate) {
            postData['unlockDate'] = new Date(data.unlockDate);
        }

        let response = null;
        $.ajax({
            type: 'POST',
            url: data.errorCallback,
            data: postData,
            async: false,
            success: function (html) {
                response = html;
            }
        });
        return response;
    },

    bindAjaxLoginResendOtpAction: function () {
        $(document).on('click', '.js-ajax-login-resend-otp', function (e) {
            e.preventDefault();
            ACC.global.showLoadingBackgroundMenu();
            $.ajax({
                type: 'GET',
                url: $(this).attr("href"),
                success: function (html) {
                    $(".loading-background").hide();
                    if ($(html).hasClass("js-header-login-form-section")) {
                        $(".js-header-login-form-section").replaceWith($(html));

                        ACC.otp.reloadOtpBindings();
                        ACC.login.bindChangeUsername();
                    }
                }
            });
        });
    },

    bindChangeUsername: function () {
        $(document).on('click', '.js-ajax-login-change-username', function (e) {
            e.preventDefault();
            ACC.global.showLoadingBackgroundMenu();
            $.ajax({
                type: 'GET',
                url: $(this).attr("href"),
                success: function (html) {
                    $(".loading-background").hide();
                    if ($(html).hasClass("js-header-login-form-section")) {
                        $('.loading-background').hide();
                        $(".js-header-login-form-section").replaceWith($(html));

                        ACC.login.loadCommonBindings();
                    }
                }
            });
        });
    },

    replaceHeaderForgottenPasswordResponse: function (data) {
        $('.loading-background').hide();
        if ($(data).hasClass("js-header-login-form-section")) {
            $('.loading-background').hide();
            $(".js-header-login-form-section").replaceWith($(data));

            ACC.forgottenpassword.loadCommonBindings();
            ACC.forgottenpassword.bindChangeUsername();
            ACC.forgottenpassword.bindResendEmailAction();
            ACC.forgottenpassword.bindResendOtpAction();
            ACC.forgottenpassword.gaEventsTriggers();
            ACC.forgottenpassword.bindAjaxForgotPasswordResendOtpAction();
            ACC.forgottenpassword.bindForgottenPasswordOtpSubmit();
            ACC.createpassword.isValidPassword();
        }
    },

    registerGAEvents: function (isMobile) {
        if (isMobile) {
            ACC.global.gaEvent("Login", "Mobile Number", sessionStorage.getItem("gaRegisterLabel"));
        } else {
            ACC.global.gaEvent("Login", "Email", sessionStorage.getItem("gaRegisterLabel"));
        }
    },

    loadCommonBindings: function () {
        ACC.login.bindLoginValidation();
        ACC.login.doInitialValidation();
        ACC.global.loadActionsForm();
        ACC.global.loadInputEffect();
        ACC.otp.reloadOtpBindings();
        ACC.global.loadRecaptchas();

        if ($("#redirectToForgottenPasswordForm").length) {
            ACC.login.bindRedirectToForgottenPassword();
        }
    },

};
