ACC.cartitem = {

    _autoload: [
        "bindCartItem"
    ],

    submitTriggered: false,

    bindCartItem: function () {

        $('.js-execute-entry-action-button').on("click", function () {
            const $this = $(this);

            if ($this.data("entryAction") === 'REMOVE') {
                ACC.track.trackRemoveFromCart($this.data("entryProductCode"), $this.data("entryInitialQuantity"));
            }

            const cartEntryActionForm = $("#cartEntryActionForm");
            const entryNumbers = $this.data("actionEntryNumbers").toString().split(';');
            entryNumbers.forEach(function (entryNumber) {
                const entryNumbersInput = $("<input>").attr("type", "hidden").attr("name", "entryNumbers").val(entryNumber);
                cartEntryActionForm.append($(entryNumbersInput));
            });
            cartEntryActionForm.attr('action', $this.data("entryActionUrl")).submit();
        });

        $('.js-update-entry-quantity-input').on("blur", function (e) {
            ACC.cartitem.handleUpdateQuantity(this, e);

        }).on("keyup", function (e) {
                return ACC.cartitem.handleKeyEvent(this, e);
            }
        ).on("keydown", function (e) {
                return ACC.cartitem.handleKeyEvent(this, e);
            }
        );
    },

    handleKeyEvent: function (elementRef, event) {
        //console.log("key event (type|value): " + event.type + "|" + event.which);

        if (event.which === 13 && !ACC.cartitem.submitTriggered) {
            ACC.cartitem.submitTriggered = ACC.cartitem.handleUpdateQuantity(elementRef, event);
            return false;
        } else {
            // Ignore all key events once submit was triggered
            if (ACC.cartitem.submitTriggered) {
                return false;
            }
        }

        return true;
    },

    handleUpdateQuantity: function (elementRef) {
        const form = $(elementRef).closest('form');

        const initialCartQuantity = form.find('input[name=initialQuantity]').val();
        const newCartQuantity = form.find('input[name=quantity]').val();

        if (initialCartQuantity !== newCartQuantity) {
            ACC.track.trackUpdateCart(form.find('input[name=productCode]').val(), initialCartQuantity, newCartQuantity);
            form.submit();

            return true;
        }
        return false;
    }
};

$(document).ready(function () {
    $('.js-cartItemDetailBtn').click(function (event) {
        event.stopPropagation();
        const thisDetailGroup = $(this).parent('.js-cartItemDetailGroup');
        thisDetailGroup.toggleClass('open'); //only in its parent
        if (thisDetailGroup.hasClass('open')) {
            //close all if not this parent
            $('.js-cartItemDetailGroup').not(thisDetailGroup).removeClass('open');
            //change aria
            $('.js-cartItemDetailBtn').attr('aria-expanded', 'true');

        } else {
            $('.js-cartItemDetailBtn').attr('aria-expanded', 'false');
        }
        $(document).click(function () {
            thisDetailGroup.removeClass('open');
        }); // closes when clicking outside this div
    });

    //enable comment for this item only
    $('.js-entry-comment-button').click(function (event) {
        event.preventDefault();
        const thisDetailGroup = $('.js-cartItemDetailBtn').parent('.js-cartItemDetailGroup');
        $($(this).attr('href')).toggleClass('in');
        thisDetailGroup.removeClass('open');
    });
});

