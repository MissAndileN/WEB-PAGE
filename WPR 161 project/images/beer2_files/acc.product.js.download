ACC.product = {

    _autoload: [
        "bindToAddToCartForm",
        "enableStorePickupButton",
        "enableVariantSelectors",
        "bindFacets",
        ["gaProductListeningClick", $(".product-listening-click").length > 0],
        ["gaPromotionListeningClick", $(".promotion-listening-click").length > 0],
        ["populateProductsWithHeavyAttributes", $(".productListJSON").length > 0],
        ["sortRefineBarResponsive", $(".sort-refine-bar").length > 0],
        "promoAlerts",
        ["seeAllCategories", $(".js-see-all-categories").length]
    ],

    bindFacets: function () {
        $(document).on("click", ".js-show-facets", function (e) {
            e.preventDefault();
            const $mainHeader = $(".js-mainHeader");
            const _asmHeight = $("#_asm").outerHeight() || 0;
            const topHeaderHeight = $mainHeader.outerHeight();
            const top = topHeaderHeight + _asmHeight;

            const selectRefinementsTitle = $(this).data("selectRefinementsTitle");
            const colorBoxTitleHtml = ACC.common.encodeHtml(selectRefinementsTitle);
            const $body = $('body');
            const $html = $('html');

            const facetAwareGridComponent = ACC.ajaxcomponent.findRelatedFacetAwareProductGridComponent($(this));
            let facetsSelector = ".js-product-facet";
            if (facetAwareGridComponent.length) {
                const componentId = facetAwareGridComponent.data("component-id");
                facetsSelector += "[data-component-id=" + componentId + "]";
            }

            ACC.colorbox.open(colorBoxTitleHtml, {
                className: "categories-facets-overlay filter",
                href: facetsSelector,
                inline: true,
                width: "300px",
                height: "100%",
                top: top,
                close: false,
                onComplete: function () {
                    $("#cboxTopCenter").parent().remove();
                    $("#cboxTitle").remove();
                    $(".facet__values").show();
                    $html.addClass('block');

                    const $categoriesFacetsOverlay = $("#colorbox.categories-facets-overlay");
                    const $cboxLoadedContent = $("#cboxLoadedContent");

                    if (window.innerWidth < 1024) {
                        $categoriesFacetsOverlay.css("top", window.pageYOffset);
                        $cboxLoadedContent.css("height", document.documentElement.clientHeight);
                    } else if (window.innerWidth < 1920) {
                        $categoriesFacetsOverlay.css("top", top + window.pageYOffset);
                        $cboxLoadedContent.css("height", document.documentElement.clientHeight - top);
                    }

                    ACC.product.setOverlay(top);
                    ACC.product.initFacetSelect();
                },
                onClosed: function () {
                    $(document).off("click", ".js-product-facet .js-facet-name");
                    $html.removeClass('block');
                }
            });
        });
        enquire.register("screen and (min-width:" + screenSmMin + ")", function () {
            $("#cboxClose").click();
        });

        $(document).on("click", ".done-close-btn", function () {
            const facetAwareGridComponent = ACC.ajaxcomponent.findRelatedFacetAwareProductGridComponent($(this));
            let productFacetSelector = "#product-facet";
            if (facetAwareGridComponent.length) {
                const componentId = facetAwareGridComponent.data("component-id");
                productFacetSelector += "[data-component-id=" + componentId + "]";
            }

            const selected = [];
            $(productFacetSelector + ' input:checked').each(function () {
                const thisVal = $(this).val();
                if (thisVal && thisVal !== "on" && selected.indexOf(thisVal) < 0) {
                    selected.push(thisVal);
                }
            });

            const nonSelected = [];
            $(productFacetSelector + ' input:checkbox:not(:checked)').each(function () {
                nonSelected.push($(this).val());
            });
            const form = document.createElement("form");
            form.method = "GET";

            const inputQuery = document.createElement("input");
            let currentSearchQueryValue = $(productFacetSelector + ' input[name=currentSearchQuery]').val();

            if (currentSearchQueryValue) {
                $.each(nonSelected, function (index, item) {
                    const regExp = new RegExp(":" + item, "g");  // regex pattern string
                    currentSearchQueryValue = currentSearchQueryValue.replace(regExp, "");
                });
                if (selected.length) {
                    $.each(selected, function (index, item) {
                        const regExp = new RegExp(":" + item, "g");  // regex pattern string
                        currentSearchQueryValue = currentSearchQueryValue.replace(regExp, "");
                    });
                    inputQuery.name = "q";
                    inputQuery.value = currentSearchQueryValue + ":" + selected.join(":");
                } else {
                    inputQuery.name = "q";
                    inputQuery.value = currentSearchQueryValue;
                }
            } else {
                const sort = facetAwareGridComponent.length > 0 ?
                    facetAwareGridComponent.find("select#sortOptions1 option:checked")
                    : $("select#sortOptions1 option:checked");
                const currentSort = sort.val();
                inputQuery.name = "q";
                inputQuery.value = selected.length ? ":" + currentSort + ":" + selected.join(":") : '';
            }

            form.appendChild(inputQuery);

            if (facetAwareGridComponent.length) {
                ACC.ajaxcomponent.loadAjaxComponent(facetAwareGridComponent, ACC.ajaxcomponent.updateGridComponent(facetAwareGridComponent, true),
                    ACC.ajaxcomponent.convertFormToObject($(form)));
            } else {
                document.body.appendChild(form);
                form.submit();
            }
        });
        $(document).on("click", ".facet-close-btn", function () {
            ACC.colorbox.close();
        })
    },

    setOverlay: function (top) {
        const $categoriesFacetsOverlay = $("#cboxOverlay.categories-facets-overlay");
        if (window.innerWidth < 1024) {
            $categoriesFacetsOverlay.css("top", 0);
        } else if (window.innerWidth < 1920) {
            $categoriesFacetsOverlay.css("top", top + window.pageYOffset);
        }
    },

    initFacetSelect: function () {
        $(document).on("click", ".js-product-facet .js-facet-name", function (e) {
            e.preventDefault();
            $(".js-product-facet  .js-facet").removeClass("active");
            $(this).parents(".js-facet").addClass("active");
        });
    },

    enableAddToCartButton: function () {
        $('.js-enable-btn').each(function () {
            if (!($(this).hasClass('outOfStock') || $(this).hasClass('out-of-stock'))) {
                $(this).prop("disabled", false);
            }
        });
    },

    enableVariantSelectors: function () {
        $('.variant-select').prop("disabled", false);
    },

    bindToAddToCartForm: function () {
        const addToCartForm = $('.add_to_cart_form');
        addToCartForm.ajaxForm({
            success: ACC.product.displayAddToCartPopup
        });
    },

    bindToAddToCartStorePickUpForm: function () {
        const addToCartStorePickUpForm = $('#colorbox #add_to_cart_storepickup_form');
        addToCartStorePickUpForm.ajaxForm({success: ACC.product.displayAddToCartPopup});
    },

    enableStorePickupButton: function () {
        $('.js-pickup-in-store-button').prop("disabled", false);
    },

    displayAddToCartPopup: function (cartResult, statusText, xhr, formElement) {
        let $ajaxCallEvent = true;
        $('#addToCartLayer').remove();
        if (typeof ACC.minicart.updateMiniCartDisplay === 'function') {
            ACC.minicart.updateMiniCartDisplay();
        }
        const titleHeader = $('#addToCartTitle').html();

        ACC.colorbox.open(titleHeader, {
            html: cartResult.addToCartLayer,
            width: "460px"
        });

        const productCode = $('[name=productCodePost]', formElement).val();
        const quantityField = $('[name=qty]', formElement).val();

        let quantity = 1;
        if (quantityField !== undefined) {
            quantity = quantityField;
        }

        const cartAnalyticsData = cartResult.cartAnalyticsData;

        const cartData = {
            "cartCode": cartAnalyticsData.cartCode,
            "productCode": productCode, "quantity": quantity,
            "productPrice": cartAnalyticsData.productPostPrice,
            "productName": cartAnalyticsData.productName
        };
        ACC.track.trackAddToCart(productCode, quantity, cartData);
    },

    gaProductListeningClick: function () {
        $(document).on("click", ".product-listening-click", function (e) {
            e.preventDefault();
            const href = $(this).attr('href');
            const productGa = $(this).parents(".product-ga");
            const dataProductGa = productGa.data("productGa");
            window.dataLayer = window.dataLayer || [];
            window.dataLayer.push({
                "event": "EEproductClick",
                "ecommerce": {
                    "currencyCode": ACC.config.currentCurrencyIsoCode,
                    "click": {
                        "actionField": {
                            "list": "category"
                        },
                        "products": dataProductGa
                    }
                }
            });
            if (!$(this).hasClass("js-reference-item")) {
                window.location = href;
            }
        });
    },


    gaPromotionListeningClick: function () {
        const promotionListeningClick = $(".promotion-listening-click");
        promotionListeningClick.on("click", function (e) {
            const isPromotion = $(this).data("isPromotion");

            if (isPromotion) {
                e.preventDefault();
                const dataPromotionGa = $(this).data("promotionGa");
                ACC.global.onPromoClick(dataPromotionGa);
            }
        });
    },

    // In case we have one or more product lists to be populated
    populateProductsWithHeavyAttributes: function () {
        let productListJSON = [];

        $(".productListJSON").each(function () {
            $.merge(productListJSON, $.parseJSON($(this).text()));
        });

        // removing duplicates
        let existingProductCodes = [];
        productListJSON = $.grep(productListJSON, function (product) {
            if ($.inArray(product.code, existingProductCodes) !== -1) {
                return false;
            } else {
                existingProductCodes.push(product.code);
                return true;
            }
        });
        ACC.product.populateProductsWithHeavyAttributesInternal(productListJSON);
    },

    populateProductWithExternalUrls: function (externalUrls, productContainer, linkContainerSelector) {
        if (externalUrls && externalUrls.buyNowUrl) {
            $.each(productContainer, function () {
                const $buyNowLinkCnt = $(this).find(linkContainerSelector)

                if ($buyNowLinkCnt.length) {
                    $buyNowLinkCnt.empty()
                    $buyNowLinkCnt.append(
                        ACC.product.createSmallBtnPillLink(
                            externalUrls.buyNowUrl, loc('product.buy.now')
                        )
                    )
                    $buyNowLinkCnt.closest(`div:not(${linkContainerSelector})`).addClass('external-link-cnt')
                }
            })
        }
    },

    reprocessProductGa: function (productInfo, productCardsByCode) {
        const {stock, salePrice} = productInfo;
        const productGaJson = JSON.parse(productCardsByCode.attr('data-product-ga')) || {};

        if (productGaJson) {
            if (stock) {
                productGaJson.stock = stock;
            }

            if (salePrice) {
                productGaJson.unit_sale_price = salePrice;
            }

            if (stock || salePrice) {
                const newProductGa = JSON.stringify(productGaJson);
                productCardsByCode.attr('data-product-ga', newProductGa);
            }
        }
        return productGaJson;
    },

    populateProductsWithHeavyAttributesInternal: function (productListJSON) {
        var products = [];
        $.ajax({
            url: ACC.config.encodedContextPath + '/populateProductsWithHeavyAttributes',
            type: 'post',
            dataType: 'text',
            contentType: 'application/json',
            data: JSON.stringify(productListJSON),
            success: function (responseProducts) {
                const responseProductsJSON = jQuery.parseJSON(responseProducts);
                $.each(responseProductsJSON, function () {
                    const icons = $(this)[0].information[0].icons;
                    const price = $(this)[0].information[0].price;
                    const bbs = $(this)[0].information[0].includedInBonusBuys;
                    const productCode = $(this)[0].product;
                    const productCardsByCode = $(".product_" + productCode);
                    const externalUrls = $(this)[0].information[0].externalUrls;
                    const productGaJson = ACC.product.reprocessProductGa($(this)[0].information[0], productCardsByCode);
                    products.push(productGaJson);

                    //1. Apply all the icons to the current product item
                    $.each(icons, function (index) {
                        const type = $(this)[0].type;
                        let iconItem;
                        if ($(this)[0].imageUrl) {
                            if ($(this)[0].aspectRatio) {
                                iconItem = "<div style='height:" + (32 * $(this)[0].aspectRatio / 100) + "px' " + "class='product-option product-option--img product-option--img--" + $(this)[0].styleClass + "'><img src='" + $(this)[0].imageUrl + "'/></div>"
                            } else {
                                iconItem = "<div class='product-option product-option--img product-option--img--" + $(this)[0].styleClass + "'><img src='" + $(this)[0].imageUrl + "'/></div>"
                            }
                        } else {
                            iconItem = ACC.product.createIconElement(type, $(this)[0].position, $(this)[0].styleClass, $(this)[0].text, productCode, $(this)[0].productExistsInBabyWishlist);
                        }
                        if (productCardsByCode.length >= 2) {
                            productCardsByCode.each(function () {
                                if (!$(this).hasClass('js-heavy-attributes-populated')) {
                                    if (type === "BABY_WISHLIST" || type === "FOR_YOU") {
                                        $(this).find(".item-product__options--" + icons[index].position.toLowerCase()).prepend()(iconItem);
                                    } else {
                                        $(this).find(".item-product__options--" + icons[index].position.toLowerCase()).append(iconItem);
                                    }
                                }
                            });
                        } else {
                            if (!productCardsByCode.hasClass('js-heavy-attributes-populated')) {
                                if (type === "BABY_WISHLIST" || type === "FOR_YOU") {
                                    productCardsByCode.find(".item-product__options--" + $(this)[0].position.toLowerCase()).prepend(iconItem);
                                } else {
                                    productCardsByCode.find(".item-product__options--" + icons[index].position.toLowerCase()).append(iconItem);
                                }
                            }
                        }
                    });

                    //2. If there is a Bonus Buy for the current product, then the price, date and bonus buy mini banner are applied.
                    //If the current product is not included in any Bonus Buy, and it has price end date, this is applied.
                    const unescapedHTML = jQuery.parseHTML(ACC.product.unescapeHTML($(this)[0].information[0].htmlBBs));
                    if (bbs.length > 0) {
                        const priceElement = $(unescapedHTML).find(".special-price");
                        const dateElement = $(unescapedHTML).find(".item-product__valid");
                        const bbsElement = $(unescapedHTML).find(".js-item-product__message");

                        if (productCardsByCode.length >= 2) {
                            productCardsByCode.each(function () {
                                if (!$(this).hasClass('js-heavy-attributes-populated')) {
                                    $(this).find(".special-price").replaceWith(priceElement.clone());
                                    $(this).find(".item-product__details").append(dateElement.clone()).append(bbsElement.clone());
                                }
                            });
                        } else {
                            if (!productCardsByCode.hasClass('js-heavy-attributes-populated')) {
                                productCardsByCode.find(".special-price").replaceWith(priceElement);
                                productCardsByCode.find(".item-product__details").append(dateElement).append(bbsElement);
                            }
                        }
                    } else if (price) {
                        const dualPricesElement = $(unescapedHTML).find(".js-dual-prices");
                        if (productCardsByCode.length >= 2) {
                            productCardsByCode.each(function () {
                                if (!$(this).hasClass('js-heavy-attributes-populated')) {
                                    if (dualPricesElement.length > 0) {
                                        $(this).find(".special-price").replaceWith(dualPricesElement.clone());
                                    }
                                    $(this).find(".item-product__details").append(ACC.product.createPriceDateElement(price.endDate));
                                }
                            });
                        } else {
                            if (!productCardsByCode.hasClass('js-heavy-attributes-populated')) {
                                if (dualPricesElement.length > 0) {
                                    productCardsByCode.find(".special-price").replaceWith(dualPricesElement.clone());
                                }
                                productCardsByCode.find(".item-product__details").append(ACC.product.createPriceDateElement(price.endDate));
                            }
                        }
                    }

                    //3. Populate the product availability in store HTML
                    const availabilityHTML = jQuery.parseHTML(ACC.product.unescapeHTML($(this)[0].information[0].htmlAvailability));
                    if ($(availabilityHTML).find(".js-product-not-available").length > 0) {
                        productCardsByCode.each(function () {
                            if (!$(this).hasClass('js-heavy-attributes-populated')) {
                                const availableInStorePlaceholder = $(this).find(".js-available-in-store");
                                if (availableInStorePlaceholder.length > 0) {
                                    availableInStorePlaceholder.replaceWith(availabilityHTML);
                                }
                            }
                        });
                    } else {
                        productCardsByCode.each(function () {
                            $(this).find(".js-item-product-price").removeClass("hidden");
                        });
                    }

                    //4. Populate the external links
                    ACC.product.populateProductWithExternalUrls(
                        externalUrls,
                        productCardsByCode,
                        '.js-buy-now-link-cnt'
                    );

                    productCardsByCode.addClass('js-heavy-attributes-populated');
                });

                ACC.product.pushGaProductImpressions(products);
                ACC.common.bonusBuyHeightItemProduct();
                ACC.wishlistLittleMe.bindAddProductToWishlist();
            }
        });
    },

    pushGaProductImpressions: function (products) {
        if (products.length > 0) {
            var maxProducts = 35;
            while (products.length) {
                var p1 = products.splice(0, maxProducts);
                window.dataLayer = window.dataLayer || [];
                window.dataLayer.push({
                    "ecommerce": {
                        "currencyCode": ACC.config.currentCurrencyIsoCode,
                        "impressions": p1
                    },
                    "event": "productImpressions"
                });
            }
        }
    },

    createIconElement: function (type, position, styleClass, text, productCode, productExistsInBabyWishlist = false) {
        if (type === "XTRA_SAVE") {
            return "<div class='product-option product-option--" + styleClass + "'><i class='shoprite-icon-xtra-savings'></i></div>";
        } else if (type === "FOR_YOU") {
            return "<div class='product-option product-option--" + styleClass + "'><i class='icon shoprite-icon-xtra-savings'></i><span class='text'>" + loc("text.icon.for-you") + "</span></div>";
        } else if (type === "BABY_WISHLIST") {
            return `<button class="wishlist-add-button js-wishlist-add-action" type="button" data-product-code="${productCode}">` +
                `<span class="text js-promo-alert-product-text">${productExistsInBabyWishlist ? 'Added to Wishlist' : 'Add to Wishlist'}</span>` +
                `<i class="icon ${productExistsInBabyWishlist ? 'shoprite-icon-added-to-wishlist' : 'shoprite-icon-wishlist-add'}" aria-hidden="true"></i></button>`
        } else {
            return "<div class='product-option product-option--" + styleClass + "'>" + text + "</div>";
        }
    },

    createPriceDateElement: function (date) {
        return "<span class='item-product__valid'>" + date + "</span>";
    },

    unescapeHTML: function (input) {
        const e = document.createElement('div');
        e.innerHTML = input;
        return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
    },

    sortRefineBarResponsive: function () {
        enquire.register("screen and (max-width:" + ACC.common.encodeHtml(screenXsMax) + ")", {
            match: function () {
                $(".sort-mobile").html($(".sort-desktop").html());
                $(".refine-mobile").html($(".refine-desktop").html());
                $(".sort-desktop").empty();
                $(".refine-desktop").empty();
            },
            unmatch: function () {
                $(".sort-desktop").html($(".sort-mobile").html());
                $(".refine-desktop").html($(".refine-mobile").html());
                $(".sort-mobile").empty();
                $(".refine-mobile").empty();
            }
        })
    },

    promoAlerts: function () {
        const $menu = $(".promo-alerts__menu");
        const $html = $("html");

        if ($menu.length) {
            const $menuLink = $menu.find(".promo-alerts__menu__link");
            $menuLink.on("click", function (e) {
                e.preventDefault();
                $menu.toggleClass("is-show");
                $html.toggleClass("is-block");
            });

            const $closeButton = $menu.find(".close-button");
            $closeButton.on("click", function () {
                $menu.removeClass("is-show");
                $html.removeClass("is-block");
            });
        }

        const $removeAllAlertsButton = $(".js-remove-all-alerts");
        if ($removeAllAlertsButton.length) {
            $removeAllAlertsButton.on("click", function () {
                ACC.colorbox.open("", {
                    className: "remove-all-alerts-modal-container",
                    href: $(".js-remove-all-alerts-modal").html(),
                    inline: true,
                    width: "454px",
                    close: false
                });
            });
        }
    },

    seeAllCategories: function () {
        const $seeAllCategoriesButton = $(".js-see-all-categories");
        const $categories = $(".browse-by-department-banner__btn.hidden");
        const $chevron = $('.search-landing__block--categories i.shoprite-icon-chevron-down');
        const chevronClassNames = ['shoprite-icon-chevron-down', 'shoprite-icon-chevron-up'];

        $seeAllCategoriesButton.on("click", function () {
            $categories.toggleClass("hidden");
            $chevron.toggleClass(chevronClassNames);
        });
    },

    createSmallBtnPillLink: function (url, text) {
        return `<a href="${url}" target="_blank" class="btn btn-pill btn-sm btn-theme btn-capitalized">${text}</a>`
    }
};

$(document).ready(function () {
    let $ajaxCallEvent = true;
    ACC.product.enableAddToCartButton();
});
